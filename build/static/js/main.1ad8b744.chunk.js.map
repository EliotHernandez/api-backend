{"version":3,"sources":["components/AddNoteForm.js","components/Footer.js","components/Note.js","components/Notes.js","components/Notification.js","components/ToggleShowNotes.js","services/notes.js","App.js","index.js"],"names":["AddNoteForm","handleOnSubmit","handleOnChange","newNote","onSubmit","value","onChange","Footer","style","color","fontStyle","fontSize","Note","note","toggleImportance","label","importante","className","content","onClick","Notes","notes","showAll","notesToShow","filter","important","map","id","Notification","message","ToggleShowNotes","handleOnClick","baseUrl","exportedObject","getAll","axios","get","then","response","data","create","newObject","post","update","put","App","useState","setNotes","setNewNote","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","find","n","changedNote","updateNote","catch","error","setTimeout","event","preventDefault","noteObject","length","date","Date","toISOString","Math","random","createNote","concat","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ad8b744.chunk.js","sourcesContent":["import React from 'react';\n\nconst AddNoteForm = ({ handleOnSubmit, handleOnChange, newNote }) => {\n    return (\n        <form onSubmit={handleOnSubmit}>\n            <input value={newNote} onChange={handleOnChange} />\n            <button>Save</button>\n        </form>\n    )\n}\n\nexport default AddNoteForm","import React from 'react';\n\nconst Footer = () => {\n    const footerStyle = {\n        color: 'green',\n        fontStyle: 'italic',\n        fontSize: 16\n    }\n    return (\n        <div style={footerStyle}>\n            <br />\n            <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\n        </div>\n    )\n}\n\nexport default Footer","import React from 'react';\n\nconst Note = ({ note, toggleImportance }) => {\n    const label = note.importante\n        ? 'make not important'\n        : 'make important'\n\n    return (\n        <li className='note'>\n            {note.content}\n            <button onClick={toggleImportance}>{label}</button>\n        </li>\n    )\n}\n\nexport default Note","import React from 'react';\nimport Note from './Note';\n\nconst Notes = ({ notes, showAll, toggleImportance }) => {\n\n    const notesToShow = showAll\n        ? notes\n        : notes.filter(note => note.important)\n\n    return (\n        <ul>\n            {notesToShow.map(note => (\n                <Note key={note.id} note={note} toggleImportance={() => toggleImportance(note.id)} />\n            ))}\n        </ul>\n    )\n}\n\nexport default Notes","import React from 'react';\n\nconst Notification = ({ message }) => {\n    if (!message) return null\n\n    return (\n        <div className=\"error\">\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React from 'react';\n\nconst ToggleShowNotes = ({ handleOnClick, showAll }) => {\n    return (\n        <div>\n            <button onClick={handleOnClick} >\n                show {showAll ? 'important' : 'all'}\n            </button>\n        </div>\n    )\n}\n\nexport default ToggleShowNotes","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst exportedObject = { getAll, create, update }\n\nexport default exportedObject","import React, { useState, useEffect } from 'react';\nimport AddNoteForm from './components/AddNoteForm';\nimport Footer from './components/Footer';\nimport Notes from './components/Notes';\nimport Notification from './components/Notification';\nimport ToggleShowNotes from './components/ToggleShowNotes';\nimport noteService from './services/notes'\n\nconst App = () => {\n    const [notes, setNotes] = useState([])\n    const [newNote, setNewNote] = useState('')\n    const [showAll, setShowAll] = useState(true)\n    const [errorMessage, setErrorMessage] = useState(null)\n\n    const hook = () => {\n        noteService.getAll()\n            .then(initialNotes => {\n                setNotes(initialNotes)\n            })\n    }\n\n    useEffect(hook, [])\n\n    const addNote = event => {\n        event.preventDefault()\n        const noteObject = {\n            id: notes.length + 1,\n            content: newNote,\n            date: new Date().toISOString(),\n            important: Math.random() < 0.5,\n        }\n\n        noteService.create(noteObject)\n            .then(createNote => {\n                setNotes(notes.concat(createNote))\n                setNewNote('')\n            })\n    }\n\n    const handleNoteChange = event => {\n        setNewNote(event.target.value)\n    }\n\n    const toggleImportanceOf = id => {\n        const note = notes.find(n => n.id === id)\n        const changedNote = { ...note, important: !note.important }\n\n        noteService.update(id, changedNote)\n            .then(updateNote => {\n                setNotes(notes.map(n => n.id !== id ? n : updateNote))\n            }).catch(error => {\n                setErrorMessage(`Note '${note.content}' was already removed from server`)\n                setTimeout(() => {\n                    setErrorMessage(null)\n                }, 5000)\n                setNotes(notes.filter(n => n.id !== id))\n            })\n    }\n\n    return (\n        <div>\n            <h1>Notes</h1>\n            <Notification message={errorMessage} />\n            <ToggleShowNotes handleOnClick={() => setShowAll(!showAll)} showAll={showAll} />\n            <Notes showAll={showAll} notes={notes} toggleImportance={toggleImportanceOf} />\n            <AddNoteForm handleOnSubmit={addNote} handleOnChange={handleNoteChange} value={newNote}/>\n            <Footer />\n        </div>\n    )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}